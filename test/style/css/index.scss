$box-color: red;        //定义变量
ul{
    color: $box-color;      //引用
}
li{
    background-color: $box-color;       //引用
}

/*变量的值也可以引用其他变量*/
$highlight-color: #F90;
$highlight-border: 1px solid $highlight-color;

.selected {
  border: $highlight-border;
}



/*选择器嵌套*/
div { 
	h1 { color: #333; } 
	p { 
	margin-bottom: 1.4px; 
	a { color: #999; } 
	} 
} 


/*hover的伪类，就需要用到 & 这个连接父选择器的标识符*/
div {
    p {
        margin-bottom: 1.4px;
        &:hover {
            color: #999;
        }
    }
}

/*属性嵌套*/
div {
    border: {
      style: solid;
      width: 1px;
      color: #ccc;
    }
}

div {
  border: 1px solid #ccc {
  left: 0px;
  right: 0px;
  }
}


/*继承*/
.class1 {
    border: 1px solid #333;
}

.class2 {
    @extend .class1;
    background-color: #999;
}

/* 代码重用之Mixin混合器 */
@mixin mixName {        
    float: left;
    margin-left: 10px;
}

div {
    @include mixName;
}

/* 带参数mixin声明及调用 */
@mixin left($value: 10px) {
    float: left;
    margin-left: $value;
}
div {
    @include left(66px);
}

/*带多组数值参数的mixin声明及调用*/

@mixin mixName($shadow...) { box-shadow:$shadow; } 
.box{ @include mixName(0 2px 2px rgba(0,0,0,.3),0 3px 3px rgba(0,0,0,.3),0 4px 4px rgba(0,0,0,.3)); } 



@mixin transition($transition){ -webkit-transition: $transition; -moz-transition: $transition; -ms-transition: $transition; -o-transition: $transition; transition: $transition; } @mixin opacity($opacity) { opacity: $opacity; filter: alpha(opacity = $opacity * 100); } 

div { width: 100px; height: 100px; @include transition(all 0.5s); @include opacity(0.5); } 
ul { width: 50px; height: 50px; @include transition(all 1s); @include opacity(1); } 


/*颜色函数*/
$box-color: red;        
ul {
    color: $box-color;      
}
li {
    background-color: darken($box-color,30%);  
    //lighten(#cc3, 10%) // #d6d65c ;  grayscale(#cc3) // #808080 ; complement(#cc3) // #33c
}

/* 
@import ‘partial’       //导入名为“_partial.scss”的文件
@import ‘toolbar.css’       //导入名为“toolbar.css”的文件
*/

